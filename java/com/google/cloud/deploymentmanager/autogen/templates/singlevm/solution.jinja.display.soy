{namespace vm.single.display}

import {SingleVmDeploymentPackageSpec} from 'java/com/google/cloud/deploymentmanager/autogen/deployment_package_autogen_spec.proto';
import {PartnerMarketingInfo} from 'java/com/google/cloud/deploymentmanager/autogen/marketing_info.proto';
import * as displayLib from 'com/google/cloud/deploymentmanager/autogen/templates/display.soy';
import * as utilities from 'com/google/cloud/deploymentmanager/autogen/templates/utilities.soy';

/** Generates solution.jinja.display file. */
{template main kind="text"}
{@param spec: SingleVmDeploymentPackageSpec}
{@param? partnerId: string}
{@param? partnerInfo: PartnerMarketingInfo}
{@param? descriptionYaml: string}

{let $solutionHasGpus: solutionHasGpus($spec)/}

{let $partnerName kind="text"}
{if $partnerInfo}
  {$partnerInfo.getName()}{nil}
{elseif $partnerId}
  {$partnerId}{nil}
{/if}
{/let}

// TODO(huyhuynh): Move all strings to resources.

{if $descriptionYaml}
description:
  {$descriptionYaml |indent: 2}
  {\n}
{/if}

input:
  properties:
    - name: image
      title: Image version
      enumLabels:
        {for $image, $index in $spec.getImagesList()}
        {if $image.getLabel()}
        'projects/{$image.getProject()}/global/images/{$image.getName()}': '{$image.getLabel()}'
        {else}
        'projects/{$image.getProject()}/global/images/{$image.getName()}': '{$image.getName()}'
        {/if}
        {/for}
    - name: zone
      title: Zone
      {if $solutionHasGpus}
      {let $acceleratorZoneSubtext kind="text"}{call displayLib.acceleratorZoneSubtext/}{/let}
      {$acceleratorZoneSubtext |indent: 6, true}{nil}
      {/if}
    - name: machineType
      title: Machine type
    {if $solutionHasGpus}
    {let $acceleratorProperty kind="text"}{call displayLib.acceleratorProperty/}{/let}
    {$acceleratorProperty |indent: 4, true}{nil}
    {/if}
    - name: bootDiskType
      title: {$spec.bootDisk.getDisplayLabel()} type
      section: BOOT_DISK
    - name: bootDiskSizeGb
      title: {$spec.bootDisk.getDisplayLabel()} size in GB
      section: BOOT_DISK

    {for $disk, $index in $spec.getAdditionalDisksList()}
    - name: {diskTypePropertyName($index) |yamlprimitive: 2}
      title: {$disk.getDisplayLabel() + ' type' |yamlprimitive: 2}
      section: ADDITIONAL_DISKS
    - name: {diskSizePropertyName($index) |yamlprimitive: 2}
      title: {$disk.getDisplayLabel() + ' size in GB' |yamlprimitive: 2}
      section: ADDITIONAL_DISKS
    {/for}

    - name: network
      title: Network name
      section: NETWORKING
    - name: subnetwork
      title: Subnetwork name
      section: NETWORKING
    - name: externalIP
      title: External IP
      tooltip: 'An external IP address associated with this instance. Selecting "None" will result in the instance having no external internet access. <a href="https://cloud.google.com/compute/docs/configure-instance-ip-addresses">Learn more</a>'
      section: NETWORKING

    {let $firewallDisplayProperties kind="text"}
      {call displayLib.firewallDisplayProperties}{param firewallsList: $spec.getFirewallRulesList()/}{/call}
    {/let}
    {$firewallDisplayProperties |indent: 4, true}{nil}

    {if $spec.ipForwarding}
    - name: ipForward
      title: IP forwarding
      tooltip: 'Forwarding allows the instance to help route packets. <a href="https://cloud.google.com/compute/docs/networking#canipforward">Learn more</a>'
      section: NETWORKING
      level: 1
    {/if}

    {for $scope in $spec.getGcpAuthScopesList()}
    - name: {call utilities.gcpAuthScopePropertyName}{param spec: $scope/}{/call}
      title: Allow {call displayLib.authScopeDescription}{param spec: $scope/}{/call} on the VM
      section: API_ACCESS
      boolean_group: {call displayLib.authScopeBoolGroupName}{param spec: $scope/}{/call}
    {/for}

    {if $spec.deployInput}
    {for $section in $spec.deployInput.getSectionsList()}
    {for $field in $section.getFieldsList()}
    {let $fieldDisplay kind="text"}
      {call displayLib.deployInputFieldDisplay}
        {param section: $section/}
        {param field: $field/}
      {/call}
    {/let}
    - {$fieldDisplay |indent: 6 |trim}
    {/for}
    {/for}
    {/if}

    {if $spec.stackdriver}
    {let $stackdriverDisplay kind="text"}
      {call displayLib.stackdriverDisplay}
        {param stackdriver: $spec.stackdriver/}
      {/call}
    {/let}
    {$stackdriverDisplay |indent: 4, true}{nil}
    {/if}

  sections:
    {call displayLib.topSections}{param spec: $spec.deployInput/}{/call}{nil}

    - name: BOOT_DISK
      title: Boot Disk
      tooltip: Each instance requires a disk to boot from.
    {if length($spec.getAdditionalDisksList()) == 1}
    - name: ADDITIONAL_DISKS
      title: Additional Disk
      tooltip: The additional disk will be attached to the instance.
    {/if}
    {if length($spec.getAdditionalDisksList()) > 1}
    - name: ADDITIONAL_DISKS
      title: Additional Disks
      tooltip: The additional disks will be attached to the instance.
    {/if}
    - name: NETWORKING
      title: Networking
    {if length($spec.getGcpAuthScopesList()) > 0}
    - name: API_ACCESS
      title: API Access
      tooltip: Applications running on the VM can call Google Cloud APIs. Select the API access you want to allow. <a href="https://cloud.google.com/compute/docs/authentication">Learn more</a>
    {/if}

    {call displayLib.bottomSections}{param spec: $spec.deployInput/}{/call}{nil}

    {if $spec.stackdriver}
    {let $stackdriverBottomSections kind="text"}
      {call displayLib.stackdriverBottomSections}
        {param stackdriver: $spec.stackdriver/}
      {/call}
    {/let}
    {$stackdriverBottomSections |indent: 4, true}{nil}
    {/if}

  {let $authScopeBooleanGroups kind="text"}
    {call displayLib.authScopeBooleanGroups}{param singleVmSpec: $spec/}{/call}
  {/let}
  {let $customBooleanGroups kind="text"}
    {call displayLib.customBooleanGroups}{param spec: $spec.deployInput/}{/call}
  {/let}
  {if ($authScopeBooleanGroups.length() + $customBooleanGroups.length()) > 0}
  boolean_groups:
    {$authScopeBooleanGroups |indent: 4, true}{nil}
    {$customBooleanGroups |indent: 4, true}{nil}
  {/if}

{\n}
runtime:
  deployingMessage: Deployment can take several minutes to complete.
  applicationTable:
    rows:
      {if $spec.siteUrl}
      {let $row kind="text"}
        {call displayLib.siteUrlApplicationTableRow}{param spec: $spec.siteUrl/}{/call}
      {/let}
      {$row |indent: 6, true}{nil}
      {/if}

      {if $spec.adminUrl}
      {let $row kind="text"}
        {call displayLib.adminUrlApplicationTableRow}{param spec: $spec.adminUrl/}{/call}
      {/let}
      {$row |indent: 6, true}{nil}
      {/if}

      {let $passwordRows kind="text"}
        {call displayLib.passwordApplicationTableRows}
          {param passwordsList: $spec.getPasswordsList()/}
          {param deployInput: $spec.deployInput/}
        {/call}
      {/let}
      {$passwordRows |indent: 6, true}{nil}

      - label: Instance
        value: '<a href="{{ consoleUrl(outputs().vmSelfLink) }}">{{ outputs().vmName }}</a>'
      - label: Instance zone
        value: '{{ properties().zone }}'
      - label: Instance machine type
        value: '{{ properties().machineType }}'

      {if $spec.postDeploy}
      {for $row in $spec.postDeploy.getInfoRowsList()}
      {let $rowDisplay kind="text"}
        {call displayLib.infoRowApplicationTableRow}
          {param infoRow: $row/}
          {param deployInput: $spec.deployInput/}
        {/call}
      {/let}
      {$rowDisplay |indent: 6, true}{nil}
      {/for}
      {/if}

  {let $adminButton kind="text"}
    {if $spec.adminUrl}
      {call displayLib.adminActionButton}{param spec: $spec.adminUrl/}{/call}
    {/if}
  {/let}
  {let $siteButton kind="text"}
    {if $spec.siteUrl}
      {call displayLib.siteActionButton}{param spec: $spec.siteUrl/}{/call}
    {/if}
  {/let}
  {let $connectButton kind="text"} // The connect button spec is always present for single vm.
    {call displayLib.connectActionButton}{param button: $spec.postDeploy.connectButton/}{/call}
  {/let}


  {if $adminButton.length() > 0}
  primaryButton:
    {$adminButton |indent: 4, true}{nil}
  secondaryButton:
    {$connectButton |indent: 4, true}{nil}

  {elseif $siteButton.length() > 0}  // if strLen($adminButton) > 0
  primaryButton:
    {$siteButton |indent: 4, true}{nil}
  secondaryButton:
    {$connectButton |indent: 4, true}{nil}

  {else}  // elseif strLen(siteButton) > 0
  primaryButton:
    {$connectButton |indent: 4, true}{nil}
  {/if}

  suggestedActions:
    - heading: No external IP configured
      description: 'The VM instance has been configured with no external IP or internet access. Connecting to it directly may not be possible. Consider using a <a href="https://cloud.google.com/compute/docs/instances/connecting-advanced#bastion_host">bastion host</a> to access this VM.'
      showIf: '{{ !outputs().hasExternalIP }}'

  {if $spec.postDeploy}
    {for $action in $spec.postDeploy.getActionItemsList()}
    - heading: {$action.getHeading() |yamlprimitive: 6}
      {if $action.getDescription()}
      description: {$action.getDescription() |yamlprimitive: 6}
      {/if}
      {if $action.getSnippet()}
      snippet: {$action.getSnippet() |yamlprimitive: 6}
      {/if}
      {if $action.showIf}
      showIf: '{{ {booleanExpressionDisplayCondition($action.showIf)} }}'
      {/if}
    {/for}
    {/if}

    {for $firewallRule in $spec.getFirewallRulesList()}
    {let $item kind="text"}{call displayLib.openPortAction}{param spec: $firewallRule/}{/call}{/let}
    {$item |indent: 4}
    {/for}

    {if length($spec.getPasswordsList()) > 1}
    - heading: Change the temporary passwords
      description: For additional security, it is recommended that you change the passwords.
    {elseif length($spec.getPasswordsList()) > 0}
    - heading: Change the temporary password
      description: For additional security, it is recommended that you change the password.
    {/if}

    - heading: Assign a static external IP address to your VM instance
      description: 'An ephemeral external IP address has been assigned to the VM instance. If you require a static external IP address, you may promote the address to static. <a href="https://cloud.google.com/compute/docs/instances-and-network#promote_ephemeral_ip">Learn more</a>'
      showIf: '{{ outputs().hasExternalIP }}'

{\n}
annotations:
  autogenSpecType: 'SINGLE_VM'
  {for $image, $index in $spec.getImagesList()}
  vmImage{$index}: https://www.googleapis.com/compute/v1/projects/{$image.getProject()}/global/images/{$image.getName()}
  {/for}

{\n}
metadata_version: v1

{/template}
