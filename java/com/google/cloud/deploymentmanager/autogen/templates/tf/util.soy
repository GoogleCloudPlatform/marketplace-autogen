{namespace util}

import {DiskSpec, FirewallRuleSpec, ImageSpec, InstanceUrlSpec, VmTierSpec, PasswordSpec, GcpAuthScopeSpec} from 'java/com/google/cloud/deploymentmanager/autogen/deployment_package_autogen_spec.proto';

/**
 * Produces Terraform variable name for firewall boolean
 * Format: enable_{protocol}_{port} or enable_{protocol}
 * Ex: enable_tcp_443
 */
{template firewallRuleVarName kind="text"}
  {@param spec: FirewallRuleSpec}

  enable_{nil}
  {call firewallRuleProtocol}
    {param spec: $spec /}
  {/call}
  {$spec.getPort().length > 0 ? '_' + $spec.getPort() : ''}{nil}
{/template}

{template firewallRuleProtocol kind="text"}
  {@param spec: FirewallRuleSpec}

  {switch $spec.getProtocol()}
    {case FirewallRuleSpec.Protocol.TCP}
      tcp{nil}
    {case FirewallRuleSpec.Protocol.UDP}
      udp{nil}
    {case FirewallRuleSpec.Protocol.ICMP}
      icmp{nil}
  {/switch}
{/template}

{template firewallRuleProtocolUpperCase kind="text"}
  {@param spec: FirewallRuleSpec}

  {switch $spec.getProtocol()}
    {case FirewallRuleSpec.Protocol.TCP}
      TCP{nil}
    {case FirewallRuleSpec.Protocol.UDP}
      UDP{nil}
    {case FirewallRuleSpec.Protocol.ICMP}
      ICMP{nil}
  {/switch}
{/template}
/**
 * Produces Terraform variable name for firewall sources range
 * Format: {protocol}_{port}_source_ranges or {protocol}_source_ranges
 * Ex: tcp_443_source_ranges
 */
{template firewallRuleSourceRangesVarName kind="text"}
  {@param spec: FirewallRuleSpec}

  {call firewallRuleProtocol}
    {param spec: $spec /}
  {/call}
  {$spec.getPort().length > 0 ? '_' + $spec.getPort() : ''}_source_ranges{nil}
{/template}

/**
 * Produces Terraform resource name for a firewall rule.
 * Format: {protocol}_{port} or {protocol}
 * Ex: tcp_443
 */
{template firewallRuleResourceName kind="text"}
  {@param spec: FirewallRuleSpec}

  {call firewallRuleProtocol}
    {param spec: $spec /}
  {/call}
  {$spec.getPort().length > 0 ? '_' + $spec.getPort() : ''}{nil}
{/template}

/**
 * Produces the suffix of the GCP name for a firewall rule.
 * Format: {protocol}-{port} or {protocol}
 * Ex: tcp-80
 */
{template firewallRuleNameSuffix kind="text"}
  {@param spec: FirewallRuleSpec}

  {call firewallRuleProtocol}
    {param spec: $spec /}
  {/call}
  {$spec.getPort().length > 0 ? '-' + $spec.getPort() : ''}{nil}
{/template}

/**
 * Produces a human-readable title for a firewall rule such as
 * "TCP 123" or "HTTPS".
 */
{template firewallRuleTitle kind="text"}
{@param spec: FirewallRuleSpec}
{if $spec.getPort().length > 0}
{switch $spec.getProtocol()}
  {case FirewallRuleSpec.Protocol.TCP}
    {if $spec.getPort() == 80}
      HTTP{nil}
    {elseif $spec.getPort() == 443 }
      HTTPS{nil}
    {else}
      TCP port {$spec.getPort()}{nil}
    {/if}
  {case FirewallRuleSpec.Protocol.UDP}
    UDP port {$spec.getPort()}{nil}
{/switch}
{else}
  {call firewallRuleProtocolUpperCase}{param spec: $spec /}{/call}{nil}
{/if}
{/template}

/**
 * Produces the description for a firewall boolean variable.
 */
{template firewallVariableDescription kind="text"}{@param spec: FirewallRuleSpec}
{let $firewallTitle kind="text"}
  {call firewallRuleTitle}
    {param spec: $spec/}
  {/call}
{/let}

Allow {$firewallTitle} traffic from the Internet{nil}
{/template}

/**
 * Produces the description for a firewall source ranges variable.
 * Ex: Source IP Ranges for HTTPS traffic
 */
{template firewallSourceRangesVarDescription kind="text"}
{@param spec: FirewallRuleSpec}
{let $firewallTitle kind="text"}
  {call firewallRuleTitle}
    {param spec: $spec/}
  {/call}
{/let}

Source IP ranges for {$firewallTitle} traffic{nil}
{/template}

/**
 * Produces the imageUri
 * Format: projects/{project}/global/images/{image}
 * Ex: projects/test-project/global/images/test-image
 */
{template imageUri kind="text"}
{@param spec: ImageSpec}
projects/{$spec.getProject()}/global/images/{$spec.getName()}{nil}
{/template}

/**
 * Produces a sanitized part of a Terraform identifier from the display label of a password.
 *
 * Removes whitespace and unsupported special characters and converts display label to lower case.
 *
 * See: https://developer.hashicorp.com/terraform/language/syntax/configuration#identifiers
 * for restrictions in indentifiers. We may need to revisit this function to omit special
 * characters that are not valid in identifiers.
 *
 */
{template sanitizePasswordLabel kind="text"}
{@param spec: PasswordSpec}
{$spec.getDisplayLabel()!.replaceAll(" ", "_") |lowercased |sanitize}{nil}
{/template}

/**
 * Produces the description for a password output.
 *
 * Format: Password for {displayLabel}
 * Ex: Password for Wordpress Admin
 */
{template passwordOutputDescription kind="text"}
{@param spec: PasswordSpec}
Password for {$spec.getDisplayLabel()!}.{nil}
{/template}


/**
 * Produces the description for a username (of a password) output
 * Format: Username for {displayLabel} password
 * Ex: Username for Wordpress Admin password
 */
{template usernameOutputDescription kind="text"}
{@param spec: PasswordSpec}
Username for {$spec.getDisplayLabel()!} password.{nil}
{/template}

/**
 * Produces the URL expression for an InstanceUrlSpec.
 *
 * Ex: https://${local.instance_ip}/adminpage
 * where instance_ip is a local variable
 */
{template makeUrlExpression kind="text"}
{@param spec: InstanceUrlSpec}
{let $scheme kind="text"}
  {switch $spec.getScheme()}
    {case InstanceUrlSpec.Scheme.HTTP}
      http{nil}
    {case InstanceUrlSpec.Scheme.HTTPS}
      https{nil}
  {/switch}
{/let}

{let $tierVm: $spec.getTierVm() /}
{let $ip kind="text"}
  {if $tierVm}
    ${lb}module.{$tierVm.getTier()}.instance_ips[{$tierVm.getIndex()}]{rb}{nil}
  {else}
    ${lb}local.instance_ip{rb}{nil}
  {/if}
{/let}

{let $port: $spec.getPort() ? ':' + $spec.getPort() : ''/}
{let $path: $spec.getPath() ? $spec.getPath() : ''/}
{let $query: $spec.getQuery() ? '?' + $spec.getQuery() : ''/}
{let $fragment: $spec.getFragment() ? '#' + $spec.getFragment() : ''/}

{$scheme}://{$ip}{$port}/{$path}{$query}{$fragment}{nil}
{/template}

{template diskSizeDescription kind="text"}
{@param spec: DiskSpec}
  {$spec.getDisplayLabel()} size in GB{nil}
{/template}

/**
 * Produces the DeploymentTag for an GCE Instance
 * Format: {deployment}-deployment
 */
{template deploymentTag kind="text"}
${lb}var.goog_cm_deployment_name{rb}-deployment{nil}
{/template}

/** Produces the property name for an API scope. */
{template gcpAuthScopePropertyName kind="text"}
{@param scope: GcpAuthScopeSpec.Scope}
{@param? tierSpec: VmTierSpec|null}
{switch $scope}
  {case GcpAuthScopeSpec.Scope.CLOUD_PLATFORM_READONLY}
    {'enable_cloud_readonly_api' |tierprefixed: $tierSpec}{nil}
  {case GcpAuthScopeSpec.Scope.CLOUD_PLATFORM}
    {'enable_cloud_api' |tierprefixed: $tierSpec}{nil}
  {case GcpAuthScopeSpec.Scope.COMPUTE_READONLY}
    {'enable_compute_readonly_api' |tierprefixed: $tierSpec}{nil}
  {case GcpAuthScopeSpec.Scope.COMPUTE}
    {'enable_compute_api' |tierprefixed: $tierSpec}{nil}
  {case GcpAuthScopeSpec.Scope.SOURCE_READ_WRITE}
    {'enable_source_read_write_api' |tierprefixed: $tierSpec}{nil}
  {case GcpAuthScopeSpec.Scope.PROJECTHOSTING}
    {'enable_projecthosting_api' |tierprefixed: $tierSpec}{nil}
{/switch}
{/template}

/** Produces the description for an API scope. */
{template authScopeDescription kind="text"}
{@param scope: GcpAuthScopeSpec.Scope}
{switch $scope}
  {case GcpAuthScopeSpec.Scope.CLOUD_PLATFORM_READONLY}
    read only access to all of Google Cloud Platform APIs{nil}
  {case GcpAuthScopeSpec.Scope.CLOUD_PLATFORM}
    full access to all of Google Cloud Platform APIs{nil}
  {case GcpAuthScopeSpec.Scope.COMPUTE_READONLY}
    read access to Google Compute Engine APIs{nil}
  {case GcpAuthScopeSpec.Scope.COMPUTE}
    read write access to Google Compute Engine APIs{nil}
  {case GcpAuthScopeSpec.Scope.SOURCE_READ_WRITE}
    read write access to Google Cloud Source Repositories APIs{nil}
  {case GcpAuthScopeSpec.Scope.PROJECTHOSTING}
    project hosting access to (Deprecated) Google Code Project Hosting APIs{nil}
{/switch}
{/template}

/** Produces the URL for an API scope. */
{template gcpAuthScopeUrl kind="text"}
{@param spec: GcpAuthScopeSpec}
{switch $spec.getScope()}
  {case GcpAuthScopeSpec.Scope.CLOUD_PLATFORM_READONLY}
    https://www.googleapis.com/auth/cloud-platform.read-only{nil}
  {case GcpAuthScopeSpec.Scope.CLOUD_PLATFORM}
    https://www.googleapis.com/auth/cloud-platform{nil}
  {case GcpAuthScopeSpec.Scope.COMPUTE_READONLY}
    https://www.googleapis.com/auth/compute.readonly{nil}
  {case GcpAuthScopeSpec.Scope.COMPUTE}
    https://www.googleapis.com/auth/compute{nil}
  {case GcpAuthScopeSpec.Scope.SOURCE_READ_WRITE}
    https://www.googleapis.com/auth/source.read_write{nil}
  {case GcpAuthScopeSpec.Scope.PROJECTHOSTING}
    https://www.googleapis.com/auth/projecthosting{nil}
{/switch}
{/template}