{namespace vm.multi.metadata}

import * as blocks from 'com/google/cloud/deploymentmanager/autogen/templates/tf/metadata_blocks.soy';
import * as constants from 'com/google/cloud/deploymentmanager/autogen/templates/tf/constants.soy';
import * as util from 'com/google/cloud/deploymentmanager/autogen/templates/tf/util.soy';
import {MultiVmDeploymentPackageSpec, VmTierSpec} from 'java/com/google/cloud/deploymentmanager/autogen/deployment_package_autogen_spec.proto';
import {SolutionMarketingInfo} from 'java/com/google/cloud/deploymentmanager/autogen/marketing_info.proto';

{template main kind="text"}
{@param spec: MultiVmDeploymentPackageSpec}
{@param solutionId: string}
{@param? solutionInfo: SolutionMarketingInfo|null}
{@param? templateVersion: string|null}

apiVersion: blueprints.cloud.google.com/v1alpha1
kind: BlueprintMetadata
metadata:
  name: marketplace-tools
  annotations:
    autogenSpecType: MULTI_VM
    config.kubernetes.io/local-config: "true"
spec:
  info:
    title: Google Cloud Marketplace Terraform Module
    {if $templateVersion}
    version: {$templateVersion |yamlprimitive: 4}
    {else}
    version: "1.0"
    {/if}
    actuationTool:
      flavor: Terraform
      version: ">= 1.2"
    description: {lb}{rb}
    {if $solutionInfo}
      {let $softwareGroups kind="text"}
        {call blocks.softwareGroups}
          {param solutionInfo: $solutionInfo /}
        {/call}
      {/let}
      {$softwareGroups |indent: 4, true}{nil}
    {/if}
  content: {lb}{rb}
  interfaces:
    variables:
    {let $projectIdProp kind="text"}
      {call blocks.projectIdProperty}
      {/call}
    {/let}
    {$projectIdProp |indent: 6, true}{nil}

    {let $deploymentNameProp kind="text"}
      {call blocks.deploymentNameProperty}
      {/call}
    {/let}
    {$deploymentNameProp |indent: 6, true}{nil}

    {let $zoneProp kind="text"}
      {call blocks.zoneProperty}
        {param name: 'zone'/}
        {param zoneSpec: $spec.getZone()/}
      {/call}
    {/let}
    {$zoneProp |indent: 6, true}{nil}

    {for $tier in $spec.getTiersList()}
    {let $tierVariablesMetadata kind="text"}
      {call tierVariables}
        {param tier: $tier/}
      {/call}
    {/let}
    {$tierVariablesMetadata |indent: 6, true}{nil}
    {/for}
{/template}

{template tierVariables kind="text" visibility="private"}
{@param tier: VmTierSpec}
{let $instanceCount: $tier.getInstanceCount()!/}
- name: {'instance_count' |tierprefixed: $tier}
{if $instanceCount.getDescription()}
  description: "{$instanceCount.getDescription() |yamlprimitive: 2}"
{elseif $instanceCount.getTooltip()}
  description: "{$instanceCount.getTooltip() |yamlprimitive: 2}"
{/if}
  varType: integer
  defaultValue: {$instanceCount.getDefaultValue()}
{/template}