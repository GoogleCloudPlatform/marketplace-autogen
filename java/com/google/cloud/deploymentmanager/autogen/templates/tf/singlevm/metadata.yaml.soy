{namespace vm.single.metadata}

import * as blocks from 'com/google/cloud/deploymentmanager/autogen/templates/tf/metadata_blocks.soy';
import * as constants from 'com/google/cloud/deploymentmanager/autogen/templates/tf/constants.soy';
import * as util from 'com/google/cloud/deploymentmanager/autogen/templates/tf/util.soy';
import {SingleVmDeploymentPackageSpec} from 'java/com/google/cloud/deploymentmanager/autogen/deployment_package_autogen_spec.proto';
import {SolutionMarketingInfo} from 'java/com/google/cloud/deploymentmanager/autogen/marketing_info.proto';

{template main kind="text"}
{@param spec: SingleVmDeploymentPackageSpec}
{@param solutionId: string}
{@param? solutionInfo: SolutionMarketingInfo|null}
{@param? templateVersion: string|null}

apiVersion: blueprints.cloud.google.com/v1alpha1
kind: BlueprintMetadata
metadata:
  name: marketplace-tools
  annotations:
    autogenSpecType: SINGLE_VM
    config.kubernetes.io/local-config: "true"
spec:
  info:
    title: Google Cloud Marketplace Terraform Module
    {if $templateVersion}
    version: {$templateVersion |yamlprimitive: 4}
    {else}
    version: "1.0"
    {/if}
    actuationTool:
      flavor: Terraform
      version: ">= 1.2"
    description: {lb}{rb}
    {if $solutionInfo}
      {let $softwareGroups kind="text"}
        {call blocks.softwareGroups}
          {param solutionInfo: $solutionInfo /}
        {/call}
      {/let}
      {$softwareGroups |indent: 4, true}{nil}
    {/if}
  content: {lb}{rb}
  interfaces:
    variables:
    {let $projectIdProp kind="text"}
      {call blocks.projectIdProperty}
      {/call}
    {/let}
    {$projectIdProp |indent: 6, true}{nil}

    {let $deploymentNameProp kind="text"}
      {call blocks.deploymentNameProperty}
      {/call}
    {/let}
    {$deploymentNameProp |indent: 6, true}{nil}

    {let $imageProp kind="text"}
      {call blocks.imageProperty}
        {param name: 'source_image'/}
        {param imagesList: $spec.getImagesList() /}
      {/call}
    {/let}
    {$imageProp |indent: 6, true}{nil}

    {let $zoneProp kind="text"}
      {call blocks.zoneProperty}
        {param name: 'zone'/}
        {param zoneSpec: $spec.getZone()/}
      {/call}
    {/let}
    {$zoneProp |indent: 6, true}{nil}

    {let $bootDiskProps kind="text"}
      {call blocks.bootDiskProperties}
        {param spec: $spec.getBootDisk()! /}
      {/call}
    {/let}
    {$bootDiskProps |indent: 6, true}{nil}

    {let $machineTypeProp kind="text"}
      {call blocks.machineTypeProperty}
        {param name: 'machine_type' /}
        {param spec: $spec.getMachineType()! /}
      {/call}
    {/let}
    {$machineTypeProp |indent: 6, true}{nil}

    {if solutionHasGpus($spec)}
    {let $acceleratorProps kind="text"}
      {call blocks.acceleratorProperties}
        {param namePrefix: 'accelerator' /}
        {param spec: $spec.getAcceleratorsList()[0] /}
      {/call}
    {/let}
    {$acceleratorProps |indent: 6, true}{nil}
    {/if}

    {let $networkProps kind="text"}
      {call blocks.networkProperties}
        {param nameSuffix: 'networks' /}
        {param spec: $spec.getNetworkInterfaces()! /}
      {/call}
    {/let}
    {$networkProps |indent: 6, true}{nil}

    {for $firewallRule in $spec.getFirewallRulesList()}
    {let $firewallProps kind="text"}
      {call blocks.firewallProperties}
        {param spec: $firewallRule /}
      {/call}
    {/let}
    {$firewallProps |indent: 6, true}{nil}
    {/for}

    {if $spec.getIpForwarding()}
    {let $ipForwardingProp kind="text"}
      {call blocks.ipForwardingProperty}
        {param name: 'ip_forward' /}
        {param spec: $spec.getIpForwarding() /}
      {/call}
    {/let}
    {$ipForwardingProp |indent: 6, true}{nil}
    {/if}

    {if $spec.getGcpAuthScopesList()}
    {let $gcpAuthScopesProps kind="text"}
      {call blocks.gcpAuthScopesProperties}
        {param specs: $spec.getGcpAuthScopesList() /}
      {/call}
    {/let}
    {$gcpAuthScopesProps |indent: 6, true}{nil}
    {/if}

    {if $spec.getAdditionalDisksList()}
    {let $additionalDisksProperties kind="text"}
      {call blocks.additionalDisksProperties}
        {param diskSpecs: $spec.getAdditionalDisksList() /}
      {/call}
    {/let}
    {$additionalDisksProperties |indent: 6, true}{nil}
    {/if}

    {if $spec.getDeployInput()}
    {let $deployInputProps kind="text"}
      {call blocks.deployInputProperties}
        {param inputSpec: $spec.getDeployInput() /}
      {/call}
    {/let}
    {$deployInputProps |indent: 6, true}{nil}
    {/if}

    {let $stackdriver kind="text"}
      {call blocks.stackdriver}
        {param stackdriver: $spec.getStackdriver() /}
      {/call}
    {/let}
    {$stackdriver |indent: 6, true}{nil}

    outputs:
      - name: instance_machine_type
        description: {constants.INSTANCE_MACHINE_TYPE_OUT_DESC}
      - name: instance_nat_ip
        description: {constants.INSTANCE_NAT_IP_OUT_DESC}
      - name: instance_network
        description: {constants.INSTANCE_NETWORK_OUT_DESC}
      - name: instance_self_link
        description: {constants.INSTANCE_SELF_LINK_OUT_DESC}
      - name: instance_zone
        description: {constants.INSTANCE_ZONE_OUT_DESC}
    {if $spec.getSiteUrl()}
      - name: site_url
        description: {constants.SITE_URL_OUT_DESC}
    {/if}
    {if $spec.getAdminUrl()}
      - name: admin_url
        description: {constants.ADMIN_URL_OUT_DESC}
    {/if}
    {let $passwordOutputs}
      {call blocks.passwordOutputs}
        {param specList: $spec.getPasswordsList() /}
      {/call}
    {/let}
    {$passwordOutputs |indent: 6, true}{nil}
{/template}
