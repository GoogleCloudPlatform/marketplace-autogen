{namespace vm.multi.tier.variables}

import * as blocks from 'com/google/cloud/deploymentmanager/autogen/templates/tf/blocks.soy';
import * as constants from 'com/google/cloud/deploymentmanager/autogen/templates/tf/constants.soy';
import * as util from 'com/google/cloud/deploymentmanager/autogen/templates/tf/util.soy';
import {MultiVmDeploymentPackageSpec, VmTierSpec} from 'java/com/google/cloud/deploymentmanager/autogen/deployment_package_autogen_spec.proto';

{template main kind="text"}
{@param packageSpec: MultiVmDeploymentPackageSpec}
{@param spec: VmTierSpec}
variable "deployment_name" {lb}
  type        = string
  description = "{constants.DEPLOYMENT_NAME_VAR_DESC}"
{rb}
{\n}
variable "zone" {lb}
  description = "{constants.ZONE_VAR_DESC}"
  type        = string
  {if $packageSpec.getZone()?.getDefaultZone()}
  default     = "{$packageSpec.getZone().getDefaultZone()}"
  {/if}
{rb}
{\n}
variable "instance_count" {lb}
  type        = number
{rb}
{\n}
variable "source_image" {lb}
  description = "{constants.SOURCE_IMAGE_VAR_DESC}"
  type        = string
  default     = "{call util.imageUri}{param spec: $spec.getImagesList()[0]/}{/call}"
{rb}
{\n}
variable "machine_type" {lb}
  description = "{constants.MACHINE_TYPE_VAR_DESC}"
  type        = string
  default     = "{$spec.getMachineType()!.getDefaultMachineType()!.getGceMachineType()}"
{rb}
{\n}
variable "boot_disk_type" {lb}
  description = "{constants.BOOT_DISK_TYPE_VAR_DESC}"
  type        = string
  default     = "{$spec.getBootDisk()!.getDiskType()!.getDefaultType()}"
{rb}
{\n}
variable "boot_disk_size" {lb}
  description = "{constants.BOOT_DISK_SIZE_VAR_DESC}"
  type        = number
  default     = {$spec.getBootDisk()!.getDiskSize()!.getDefaultSizeGb()}
{rb}
{\n}
{for $password in $packageSpec.getPasswordsList()}
  {let $sanitizedPasswordLabel}
    {call util.sanitizePasswordLabel}
      {param spec: $password /}
    {/call}
  {/let}
{let $passwordDescription}
  {call util.passwordOutputDescription}
    {param spec: $password /}
  {/call}
{/let}
variable "{$sanitizedPasswordLabel}_password" {lb}
  type        = string
  description = "{$passwordDescription |doublequoted}"
  sensitive   = true
{rb}
{\n}
{/for}

{call blocks.stackdriverVariables}{param stackdriver: $packageSpec.getStackdriver() /}{/call}
{/template}
