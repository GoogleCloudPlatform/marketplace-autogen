{namespace vm.multi.tierTf}

import * as blocks from 'com/google/cloud/deploymentmanager/autogen/templates/tf/blocks.soy';
import {VmTierSpec, MultiVmDeploymentPackageSpec} from 'java/com/google/cloud/deploymentmanager/autogen/deployment_package_autogen_spec.proto';

{template main kind="text"}
{@param spec: VmTierSpec}
{@param packageSpec: MultiVmDeploymentPackageSpec}
{let $passwordMetadata}
  {call blocks.passwordMetadata}
    {param specList: $packageSpec.getPasswordsList() /}
    {param passwordFromVar: true /}
  {/call}
{/let}
{let $stackdriverMetadata}
  {call blocks.stackdriverMetadata}
    {param stackdriver: $packageSpec.getStackdriver() /}
  {/call}
{/let}

locals {lb}
  metadata = {lb}
  {if $passwordMetadata}
    {$passwordMetadata |indent: 4}
  {/if}
  {if $stackdriverMetadata}
    {$stackdriverMetadata |indent: 4}
  {/if}
  {rb}
{rb}
{\n}
resource "google_compute_instance" "instance" {lb}
  count = var.instance_count

  // Hard code values initially for development
  name = "${lb}var.deployment_name{rb}-{$spec.getName()}-vm-${lb}count.index{rb}"
  zone = var.zone
  machine_type = "e2-medium"

  boot_disk {lb}
    initialize_params {lb}
      image = "debian-cloud/debian-11"
    {rb}
  {rb}
{\n}
  metadata = local.metadata
{\n}
  network_interface {lb}
    network = "default"
  {rb}
{rb}
{/template}
