{% import "path_utils.jinja" as path_utils with context %}

{% set instanceCount = properties["instanceCount"] %}
{% set zone = properties["zone"] %}
{% set machineType = properties["machineType"] %}
{% set acceleratorType = properties["acceleratorType"] %}
{% set acceleratorCount = properties["acceleratorCount"] %}
{% set networks = [] %}
{% for network in properties["network"] %}
{% set _ = networks.append(path_utils.networkPath(network)) %}
{% endfor %}
{% set subnetworks = properties["subnetwork"] %}
{% set externalIPs = properties["externalIP"] %}
{% set bootDiskType = properties["bootDiskType"] %}
{% set bootDiskSizeGb = properties["bootDiskSizeGb"] %}
{% set hasExternalIP = externalIPs is defined and externalIPs[0] != "NONE" %}
{# Software status only works if the VM has an external IP. #}
{% set enableStatusWaiter = hasExternalIP %}
{# Convert boolean type to integer. Stackdriver metadata items need value 0 or 1. #}
{% set enableStackdriverLogging = "1" if properties["enableStackdriverLogging"] else "0" %}
{# Convert boolean type to integer. Stackdriver metadata items need value 0 or 1. #}
{% set enableStackdriverMonitoring = "1" if properties["enableStackdriverMonitoring"] else "0" %}
{% if instanceCount <= 0 %}
resources: []
{% else %}
resources:
  {% for vmIndex in range(instanceCount) %}
  - name: {{ env["deployment"] }}-tier3-vm-tmpl-{{ vmIndex }}
    type: vm_instance.py
    properties:
      instanceName: {{ env["deployment"] }}-tier3-vm-{{ vmIndex }}
      sourceImage: https://www.googleapis.com/compute/v1/projects/click-to-deploy-images/global/images/jenkins-v20180130
      zone: {{ zone }}
      machineType: {{ machineType }}
      networks:
      {% for network in networks %}
        - {{ network }}
      {% endfor %}
      {% if subnetworks is defined and subnetworks %}
      subnetworks:
      {% for subnetwork in subnetworks %}
        - {{ subnetwork or '' }}
      {% endfor %}
      {% endif %}
      {% if externalIPs is defined and externalIPs %}
      externalIPs:
      {% for externalIP in externalIPs %}
        - {{ externalIP }}
      {% endfor %}
      {% endif %}
      bootDiskType: {{ bootDiskType }}
      bootDiskSizeGb: {{ bootDiskSizeGb }}
      {% if acceleratorCount > 0 %}
      guestAccelerators:
        - acceleratorType: {{ acceleratorType }}
          acceleratorCount: {{ acceleratorCount }}
      {% endif %}
      serviceAccounts:
        - email: default
          scopes:
            - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
            - 'https://www.googleapis.com/auth/devstorage.read_only'
            - 'https://www.googleapis.com/auth/logging.write'
            - 'https://www.googleapis.com/auth/monitoring.write'
            - 'https://www.googleapis.com/auth/cloudruntimeconfig'
      metadata:
        items:
          - key: admin-password
            value: {{ properties["generatedPassword0"] }}
          - key: ghost-db-password
            value: {{ properties["generatedPassword1"] }}
          {% if properties["input_generateOptionalPassword"] %}
          - key: optional-password
            value: {{ properties["generatedPassword2"] }}
          {% endif %}
          - key: startup-script
            value: |-
              #!/bin/bash
              cd /tmp
              echo STARTED >> /tmp/startup_log
              cd -
          {% if enableStatusWaiter %}
          - key: status-config-url
            value: $(ref.software-status.config-url)
          - key: status-variable-path
            value: $(ref.software-status.variable-path)
          - key: status-uptime-deadline
            value: 300
          {% endif %}
          - key: google-logging-enable
            value: {{ enableStackdriverLogging }}
          - key: google-monitoring-enable
            value: {{ enableStackdriverMonitoring }}
      tags:
        items:
          - {{ env["deployment"] }}-deployment
          - {{ env["deployment"] }}-tier3-tier
  {% endfor %}
  {% if enableStatusWaiter %}
  {% if instanceCount > 0 %}
  - name: software-status
    type: software_status.py
    properties:
      timeout: 300
      prefix: {{ env['deployment'] }}-tier3
      waiterDependsOn:
        {% for vmIndex in range(instanceCount) %}
        - {{ env["deployment"] }}-tier3-vm-{{ vmIndex }}
        {% endfor %}
      {% if instanceCount > 1 %}
      successNumber: {{ instanceCount }}
      {% endif %}
  {% endif %}
  {% endif %}
  {% if properties["enableTcp9000"] %}
  - name: {{ env["deployment"] }}-tier3-tcp-9000
    type: compute.v1.firewall
    properties:
      network: {{ networks[0] }}
      sourceTags:
      - {{ env["deployment"] }}-tier3-tier
      targetTags: ["{{ env["deployment"] }}-tier3-tier"]
      allowed:
        - IPProtocol: TCP
          ports: ["9000"]
  {% endif %}
  {% if properties["enableUdp2333"] %}
  - name: {{ env["deployment"] }}-tier3-udp-2333
    type: compute.v1.firewall
    properties:
      network: {{ networks[0] }}
      sourceTags:
      - {{ env["deployment"] }}-deployment
      targetTags: ["{{ env["deployment"] }}-tier3-tier"]
      allowed:
        - IPProtocol: UDP
          ports: ["2333"]
  {% endif %}

outputs:
  {% for vmIndex in range(instanceCount) %}
  - name: vmId{{ vmIndex }}
    value: $(ref.{{ env["deployment"] }}-tier3-vm-{{ vmIndex }}.id)
  - name: vmExternalIP{{ vmIndex }}
    {% if hasExternalIP %}
    value: $(ref.{{ env["deployment"] }}-tier3-vm-tmpl-{{ vmIndex }}.ip)
    {% else %}
    value: NONE
    {% endif %}
  - name: vmInternalIP{{ vmIndex }}
    value: $(ref.{{ env["deployment"] }}-tier3-vm-tmpl-{{ vmIndex }}.internalIP)
  - name: vmName{{ vmIndex }}
    value: {{ env["deployment"] }}-tier3-vm-{{ vmIndex }}
  - name: vmSelfLink{{ vmIndex }}
    value: $(ref.{{ env["deployment"] }}-tier3-vm-{{ vmIndex }}.selfLink)
  {% endfor %}
  - name: hasExternalIP
    value: {{ hasExternalIP }}
{% endif %}
